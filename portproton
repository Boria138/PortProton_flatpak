#!/usr/bin/env bash
# Author: Castro-Fidel (linux-gaming.ru)
# License MIT
########################################################################
unset PW_AUTOPLAY PW_SET_LANG PW_SILENT_INSTALL
export portname="PortProton"
export port_ver=1.0
########################################################################
export NO_AT_BRIDGE=1
ENG_LANG="English"
RUS_LANG="Russian"
export PW_SILENT_INSTALL="1"
[ -z "${LANG}" ] && export LANG=C
my_dir=$(dirname "$(readlink -f "$0")")
echo $my_dir
if [ "$my_dir" == "/app/bin" ] ; then
	if [ -f "${XDG_DATA_HOME}/scripts/start.sh" ] ; then
		 bash "${XDG_DATA_HOME}/scripts/start.sh" "$@"
		exit 0
	else
		if [ -n "$(locale | grep "LANG=ru_RU.UTF-8")" ] ; then
			PW_SET_LANG=$RUS_LANG
		else
			PW_SET_LANG=$ENG_LANG
		fi
		export PW_SILENT_INSTALL="1"
		export PW_AUTOPLAY=1
	fi
fi
########################################################################
export INSTALLING_PORT=1
########################################################################
cd "$my_dir"
export links
links="$(pwd)"
########################################################################
scripts_dir="${XDG_DATA_HOME}/scripts"
rm -fr "${XDG_DATA_HOME}/tmp"
rm -f "${scripts_dir}/"* > /dev/null 2>&1
########################################################################
mkdir -p "${XDG_DATA_HOME}/tmp"
echo "${port_ver}" > "${XDG_DATA_HOME}/tmp/${portname}_ver"
case $PW_SET_LANG in
	"$RUS_LANG") echo "RUS" > "${XDG_DATA_HOME}/tmp/${portname}_loc" ;;
	"$ENG_LANG") echo "ENG" > "${XDG_DATA_HOME}/tmp/${portname}_loc" ;;
esac
########################################################################
export PORT_WINE_TMP_PATH="${XDG_DATA_HOME}/tmp"
cd "${XDG_DATA_HOME}"
try_download_scripts () {
	wget -O "${PORT_WINE_TMP_PATH}/PortWINE-master.tar.gz" -nd -c --read-timeout 300 \
	--retry-connrefused --timeout 15 --tries 3 \
    --user-agent="Mozilla/5.0 (compatible; Konqueror/2.1.1; X11)" \
	"https://github.com/Castro-Fidel/PortWINE/archive/refs/heads/master.tar.gz"
	if [ "$?" = "0" ] ; then
		tar -xvzf "${PORT_WINE_TMP_PATH}/PortWINE-master.tar.gz" -C "${PORT_WINE_TMP_PATH}"
		if [ "$?" = "0" ] ; then
			[ ! -d "${XDG_DATA_HOME}" ]
			cp -fr "${PORT_WINE_TMP_PATH}/PortWINE-master/data_from_portwine/"* "${XDG_DATA_HOME}"
			rm -f "${PORT_WINE_TMP_PATH}/PortWINE-master.tar.gz"
			rm -fr "${PORT_WINE_TMP_PATH}/PortWINE-master/"
			export scripts_current_ver
			scripts_current_ver=$(cat "${scripts_dir}/var" | grep SCRIPTS_NEXT_VERSION | awk -F "=" '{print $2}')
			echo "${scripts_current_ver}" > "${PORT_WINE_TMP_PATH}/scripts_ver"
		else
			rm -f "${PORT_WINE_TMP_PATH}/PortWINE-master.tar.gz"
			try_download_scripts
		fi
	else
		try_download_scripts
	fi
}
if [ "${PW_SILENT_INSTALL}" = "1" ] && [ ! -f "/usr/bin/portproton" ] ; then
	try_download_scripts
else
	try_download_scripts | progress_bar
fi
